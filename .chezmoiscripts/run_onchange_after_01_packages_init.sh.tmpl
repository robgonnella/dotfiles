#!/usr/bin/env zsh

PYTHON_VERSION=3.12.6

source $HOME/.zshrc

log() {
    echo
    echo -e "\033[1;36m===> $1\033[0m"
    echo
}

# atuin setup
log "Importing shell history to atuin"
atuin import auto

{{- if eq .chezmoi.os "linux" }}
if ! command -v tfswitch >/dev/null 2>&1; then
    log "Installing tfswitch on linux"
    curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/master/install.sh | bash
fi
{{- end }}

# install python
if ! command -v python >/dev/null 2>&1; then
    log "Installing python via pyenv"
    pyenv install $PYTHON_VERSION
    pyenv global $PYTHON_VERSION
    log "Installing poetry via pipx"
    pipx install poetry --python=$PYTHON_VERSION
fi

# install node
if ! command -v node >/dev/null 2>&1; then
    log "Installing node via volta"
    volta install node
fi

# install deno
if ! command -v dvm >/dev/null 2>&1; then
    log "Installing dvm to manage deno versions"
    curl -fsSL https://dvm.deno.dev | sh
fi

if ! command -v deno >/dev/null 2>&1; then
    log "Installing deno via dvm"
    dvm install
fi

# install rust
if ! command -v rustc >/dev/null 2>&1; then
    log "Installing rust"
    curl \
        --proto '=https' \
        --tlsv1.2 \
        -sSf \
        https://sh.rustup.rs | sh -s -- --no-modify-path -y
fi

# configure poetry plugin for oh-my-zsh
if [ ! -d $HOME/.oh-my-zsh/plugins/poetry ]; then
    log "Configuring poetry plugin for oh-my-zsh"
    mkdir -p $HOME/.oh-my-zsh/plugins/poetry
    poetry completions zsh >$HOME/.oh-my-zsh/plugins/poetry/_poetry
fi

{{- if eq .terminal_multiplexer "tmux" }}
# install tmux plugins
log "Installing tmux plugins"
{{ .chezmoi.homeDir }}/.tmux/plugins/tpm/bin/install_plugins
{{- end }}

{{- if eq .editor "vim" }}
# install vim plugins
log "Installing vim plugins"
vim +PluginInstall +qall
{{- end }}

# install helm plugins
if ! helm plugin list | grep diff; then
    log "Installing helm-diff"
    helm plugin install https://github.com/databus23/helm-diff
fi

if ! helm plugin list | grep helm-git; then
    log "Installing helm-git"
    helm plugin install https://github.com/aslafy-z/helm-git
fi

{{- if eq .editor "helix" }}
# install language servers and formatters
log "Installing language servers and formatters"
go install mvdan.cc/sh/v3/cmd/shfmt@latest
go install github.com/lasorda/protobuf-language-server@latest
go install github.com/go-delve/delve/cmd/dlv@latest
go install golang.org/x/tools/gopls@latest

npm i -g bash-language-server \
    typescript typescript-language-server \
    vscode-langservers-extracted \
    prettier eslint eslint-config \
    dockerfile-language-server-nodejs \
    @microsoft/compose-language-service \
    yaml-language-server \
    @prisma/language-server

pipx install "python-lsp-server[all]" black
{{- end }}

log 'Setup Complete'
