#   __                            __
#  |  \                          |  \
#  | $$____    ______    _______ | $$____    ______    _______
#  | $$    \  |      \  /       \| $$    \  /      \  /       \
#  | $$$$$$$\  \$$$$$$\|  $$$$$$$| $$$$$$$\|  $$$$$$\|  $$$$$$$
#  | $$  | $$ /      $$ \$$    \ | $$  | $$| $$   \$$| $$
#  | $$__/ $$|  $$$$$$$ _\$$$$$$\| $$  | $$| $$      | $$_____
#  | $$    $$ \$$    $$|       $$| $$  | $$| $$       \$$     \
#   \$$$$$$$   \$$$$$$$ \$$$$$$$  \$$   \$$ \$$        \$$$$$$$


# If not running interactively, don't do anything
case $- in
  *i*) ;;
  *) return;;
esac

# store the current platform
PLATFORM=`uname -s`

# show punk girl art at start of session
cat "$HOME/.punk_gurl"
echo ""
echo ""

# ========================
# Environmental Variables
# ========================

export HOMEBREW_EDITOR=vim
export NODE_REPL_HISTORY_FILE=$HOME/.node_repl_history

# =================
# Settings
# =================

# Prefer US English
export LC_ALL="en_US.UTF-8"
# use UTF-8
export LANG="en_US"

# =================
# History
# =================

# http://jorge.fbarr.net/2011/03/24/making-your-bash-history-more-efficient/

# ignore same sucessive entries.
export HISTCONTROL=ignoreboth

# Make some commands not show up in history

export HISTIGNORE="h:history"

# append to the history file, don't overwrite it
shopt -s histappend

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# =================
# Sourced Scripts
# =================
# Helpful utility functions
if [ -f $HOME/.bash_util ]; then
  source $HOME/.bash_util
fi

# Commonly used aliases 
if [ -f $HOME/.bash_common_aliases ]; then
  source $HOME/.bash_common_aliases
fi

# platform specific aliases
if [ "$PLATFORM" = "Linux" ] && [ -f $HOME/.bash_ubu_aliases ]; then
  source $HOME/.bash_ubu_aliases
elif [ "$PLATFORM" = "Darwin" ] && [ -f $HOME/.bash_osx_aliases ]; then
  source $HOME/.bash_osx_aliases
fi

# bash/zsh completion support for core Git
if [ -f $HOME/.git-completion.bash ]; then
  source $HOME/.git-completion.bash
fi

# Load our custom prompt
if [ -f $HOME/.bash_prompt ]; then
  source $HOME/.bash_prompt
fi

if [ -f $HOME/.bashrc_extra ]; then
  source $HOME/.bashrc_extra
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# NVM Setup
export NVM_DIR="$HOME/.nvm"
# This loads nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
# This loads nvm bash_completion
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# GOLANG Setup
# Set path to go directory
# https://golang.org/doc/install
export GOPATH="$HOME/code/go"

# ======================================
# Add script drectories to PATH
# =====================================
PATH="$HOME/.rbenv/bin:$PATH"                  # RBENV
PATH="/usr/local/bin:/usr/local/sbin:$PATH"    # Homebrew
PATH="/usr/local/heroku/bin:$PATH"             # Heroku Toolbelt
PATH="$(go env GOPATH)/bin:$PATH"              # Go bin

# intialize rbenv
eval "$(rbenv init -)"

# Below here is an area for other commands added by outside programs or
# commands. Attempt to reserve this area for their use!
##########################################################################
