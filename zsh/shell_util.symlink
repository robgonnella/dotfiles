# =================
# Functions
# =================

#######################################
# Start an HTTP server from a directory
# Arguments:
#  Port (optional)
#######################################

serve() {
  port=${1:-8000}
  # Simplest server ever!
  (sleep 2 && open "http://localhost:${port}") &
  python -m SimpleHTTPServer
}

#######################################
# List any open sockets on several popular
# ports or pass a specific port to check.
# Useful if a rogue server is running.
# http://www.akadia.com/services/lsof_intro.html
# http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers
#######################################

rogue() {
  # add or remove ports to check here!
  local port=$1
  local PORTS=(3000 4567 6379 8000 8001 8080 8081 8082 8888 9515 27017)
  local MESSAGE="> Checking for processes on ports"
  local COMMAND="lsof"
  local COMMAND_ARGS=""

  if [ -n "${port}" ]; then
    PORTS=($port)
    MESSAGE="${MESSAGE%?}"
  fi

  for PORT in ${PORTS[@]}; do
    MESSAGE="${MESSAGE} ${PORT},"
    if [ -z "${COMMAND_ARGS}" ]; then
      COMMAND_ARGS="-i TCP:${PORT}"
    else
      COMMAND_ARGS="${COMMAND_ARGS},${PORT}"
    fi
  done

  echo "${MESSAGE%?}..."
  COMMAND="${COMMAND} ${COMMAND_ARGS}"
  local OUTPUT="$(eval sudo $COMMAND)"

  if [ -z "$OUTPUT" ]; then
    echo "> Nothing running!"
  else
    echo "> Processes found:"
    printf "\n$OUTPUT\n\n"
    echo "> Use the 'kill' command with the 'PID' of any process you want to quit."
    echo
  fi
}

dexec() {
  cntnr=$1
  shift
  cmd="${$@:-bash}"
  docker exec -ti ${cntnr} ${cmd}
}

dlist() {
  local ltype=c
  if [ -n "${1}" ]; then
    ltype="${1}"
    shift
  fi
  case ${ltype} in
    c|containers) docker ps -a "$@";;
    i|images) docker images "$@";;
    *)
      echo "unknown arg: ${ltype}, listing containers..."
      docker ps -a "$@";;
  esac
}

drm() {
  if [ -z "$1" ]; then
    docker rm -f $(dlist c -q)
  else
    docker rm -f "$@"
  fi
}

zshman() {
  less /usr/share/zsh/$ZSH_VERSION/help/$1
}
